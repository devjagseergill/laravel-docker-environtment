version: '3.9'

services:
  webapp:
    container_name: webapp
    build:
      context: ./docker
      dockerfile: webapp
      args:
        PHP_VERSION: ${PHP_VERSION}
    volumes:
    - ./website:/var/www/html
    ports:
    - "${APP_PORT:-80}:80"
    depends_on:
      - mysql
    networks:
      - backend

  mysql:
    image: mysql:5.7
    container_name: mysql
    volumes:
      - ./data/run/var:/var/lib/mysql
    ports:
      - ${MYSQL_PORT:-3306}:3306
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    networks:
      - backend


  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - ${PHPMYADMIN_PORT:-8080}:80
    environment:
       PMA_HOST: mysql
    depends_on:
      - mysql
    networks:
      - backend

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    ports:
      - ${MONGO_PORT:-27017}:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - backend
      

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "${MONGO_EXPRESS_PORT:-8081}:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:${MONGO_PORT:-27017}/
    networks:
      - backend

networks:
  backend: {}

